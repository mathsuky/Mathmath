openapi: 3.1.0
x-stoplight:
  id: 7oul61us08svr
info:
  title: MathMath
  version: '1.0'
  description: yaml file for MathMath
  contact:
    name: masky
servers:
  - url: 'http://localhost:3000'
paths:
  /questions:
    get:
      summary: questionsGET
      tags:
        - questions
      responses:
        '200':
          $ref: '#/components/responses/Questions'
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: getAllQuestions
      description: getQuestions
      requestBody:
        content: {}
      parameters:
        - schema:
            type: integer
          in: query
          name: offset
        - schema:
            type: string
          in: query
          name: sort
    post:
      summary: questionsPOST
      operationId: postQuestion
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionInput'
      tags:
        - questions
      description: postQuestions
    parameters: []
  '/questions/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: questionsIdGET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content: {}
      operationId: getQuestion
      description: getEachQuestion
      tags:
        - questions
      requestBody:
        content: {}
    put:
      summary: questionsIdPUT
      operationId: putQuestion
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponse'
                x-examples:
                  Example 1:
                    id: cfb56d06-6f7d-f9c3-96a4-2e7a32dc0499
                    owner:
                      id: f4b5a76e-d425-1c42-ecc9-6530ce81bd4c
                      name: pirosiki
                    title: title
                    content: content
                    created_at: '2022-02-18T14:12:53.4242+09:00'
                    tags:
                      - id: f246afb5-eaa3-2487-2f9d-f2f90064f59f
                        name: tag
                    answer_id: answersId
                    answer_content: content
                    difficulty: 3
                    upvote_count: 100
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionInput'
              x-examples:
                Example 1:
                  question_id: cfb56d06-6f7d-f9c3-96a4-2e7a32dc0499
                  title: title
                  content: content
                  tags:
                    - id: 1ab8fa39-03f7-d06f-a7be-40aae74a9560
                  answer_content: content
                  difficulty: 3
      tags:
        - questions
      description: putQuestion
  /tags:
    get:
      summary: tagsGET
      tags:
        - tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
                  x-stoplight:
                    id: 8kp69p5nbf6m6
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: getAllTags
      description: getAllTags
    post:
      summary: tagsPOST
      operationId: postTag
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
                x-examples:
                  Example 1:
                    id: f246afb5-eaa3-2487-2f9d-f2f90064f59f
                    name: tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagInput'
      tags:
        - tags
      description: postNewTag
  '/questions/{id}/comments':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: commentsGET
      tags:
        - comments
      responses:
        '200':
          $ref: '#/components/responses/Comments'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: getAllComments
      requestBody:
        content: {}
      description: getComments
    post:
      summary: commentsPOST
      operationId: postComment
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentInput'
              x-examples:
                Example 1:
                  user_id: f4b5a76e-d425-1c42-ecc9-6530ce81bd4c
                  content: I'm a comment
      tags:
        - comments
      description: postComment
  '/users/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: usersIdGET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-users-userId
      requestBody:
        content: {}
      tags:
        - users
      description: getEachUser
  /users/me:
    get:
      summary: meGET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: getMe
      requestBody:
        content: {}
      tags:
        - users
      description: getMe
components:
  schemas:
    User:
      title: Owner
      x-stoplight:
        id: 0ge5hoz86w13m
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          x-stoplight:
            id: icqcgqnvacpqs
      required:
        - id
        - name
      x-tags:
        - User
    Tag:
      title: Tag
      x-stoplight:
        id: 8cr0xtjokggmz
      type: object
      x-tags:
        - Tag
      properties:
        id:
          type: string
        name:
          type: string
          x-stoplight:
            id: qsiiku8n8a0nm
      required:
        - id
        - name
    TagInput:
      title: TagInput
      x-stoplight:
        id: rqx1kulfbvoq4
      type: object
      properties:
        id:
          type: string
      x-tags:
        - Tag
    Comment:
      title: Comment
      x-stoplight:
        id: vaf0kzvieg7v9
      type: object
      properties:
        id:
          type: string
        owner:
          $ref: '#/components/schemas/User'
          x-stoplight:
            id: 4h7c580ypjtp7
        content:
          type: string
          x-stoplight:
            id: 6s6hzhkt2gkzx
        created_at:
          type: string
          x-stoplight:
            id: nid3k3h71ovw0
      required:
        - id
        - owner
        - content
        - created_at
      x-tags:
        - Comment
    UserInput:
      title: UseInput
      x-stoplight:
        id: eichb7d6yrm1x
      type: object
      properties:
        id:
          type: string
      x-tags:
        - User
    CommentInput:
      title: CommentInput
      x-stoplight:
        id: pqgc9wj7ttnu2
      type: object
      properties:
        owner:
          $ref: '#/components/schemas/UserInput'
          x-stoplight:
            id: 4dwajq75uq318
        content:
          type: string
          x-stoplight:
            id: v3at37b8ka2ge
      required:
        - owner
        - content
      x-tags:
        - Comment
    QuestionInput:
      title: QuestionInput
      x-stoplight:
        id: l09pestmrw4kf
      type: object
      properties:
        owner:
          $ref: '#/components/schemas/UserInput'
          x-stoplight:
            id: edrwwm3v3is5g
        title:
          type: string
          x-stoplight:
            id: mfqg9una84oo2
        content:
          type: string
          x-stoplight:
            id: s33x45iy1ye4r
        answer_content:
          type: string
          x-stoplight:
            id: nmolck1ipniuj
        tags:
          type: array
          x-stoplight:
            id: e4f8jgv4rs8yy
          items:
            $ref: '#/components/schemas/TagInput'
            x-stoplight:
              id: u9cfw0cejd530
        difficulty:
          type: integer
          x-stoplight:
            id: 3cctg9vztlz9h
          maximum: 5
          minimum: 1
      required:
        - owner
        - title
        - content
        - answer_content
        - difficulty
      x-tags:
        - Question
    QuestionResponse:
      title: QuestionResponse
      x-stoplight:
        id: l0ef0el5li8iv
      type: object
      x-tags:
        - Question
      properties:
        id:
          type: string
        owner:
          $ref: '#/components/schemas/User'
        title:
          type: string
          x-stoplight:
            id: kqzr85j6vm5g9
        content:
          type: string
          x-stoplight:
            id: u8jgecueu6jd5
        answer_content:
          type: string
          x-stoplight:
            id: f6i4k6j5ra3so
        created_at:
          type: string
          x-stoplight:
            id: eyk3q0kyg0uon
        difficulty:
          type: integer
          x-stoplight:
            id: j7xige49tv4t1
        upvote_count:
          type: integer
          x-stoplight:
            id: ngli4k26h4rdg
      required:
        - id
        - title
        - content
        - answer_content
        - created_at
        - difficulty
        - upvote_count
    Question:
      title: Question
      x-stoplight:
        id: qezdhk8e0va4y
      type: object
      x-tags:
        - Question
      properties:
        id:
          type: string
        owner:
          $ref: '#/components/schemas/User'
          x-stoplight:
            id: 2eumvokz6c9xu
        title:
          type: string
          x-stoplight:
            id: zoc2nzdfv34oc
        content:
          type: string
          x-stoplight:
            id: afe08chzagqy0
        answer_content:
          type: string
          x-stoplight:
            id: rpavolps5bpcs
        created_at:
          type: string
          x-stoplight:
            id: ldhfoz5myp5m8
        tags:
          type: array
          x-stoplight:
            id: dxnmq4coxfak2
          items:
            $ref: '#/components/schemas/Tag'
            x-stoplight:
              id: oxdxbphtuamb2
        difficulty:
          type: integer
          x-stoplight:
            id: rnbskoinpbe1s
        upvote_count:
          type: integer
          x-stoplight:
            id: bwtwny8wwro9x
      required:
        - id
        - owner
        - title
        - content
        - answer_content
        - created_at
        - difficulty
        - upvote_count
  responses:
    Questions:
      description: QuestionsResponse
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QuestionResponse'
              x-stoplight:
                id: ygri2vyxeo3vu
    Comments:
      description: CommentsResponse
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Comment'
              x-stoplight:
                id: 25zcrc58p7fai
